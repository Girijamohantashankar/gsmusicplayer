{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Girija Sh. Mohanta\\\\Desktop\\\\music\\\\gsmusic\\\\src\\\\Musicplayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./Musicplayer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPlayer = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [currentSongImage, setCurrentSongImage] = useState(\"\");\n  const [songs, setSongs] = useState([]);\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  const audioRef = useRef(null);\n  const [audioLoaded, setAudioLoaded] = useState(false);\n  const [isLayerVisible, setIsLayerVisible] = useState(false);\n  const [isSongsListVisible, setIsSongsListVisible] = useState(false);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/songs/\").then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch songs\");\n      }\n      return response.json();\n    }).then(data => {\n      setSongs(data);\n      if (data.length > 0) {\n        setCurrentSongImage(`${data[currentSongIndex].image}`);\n        audioRef.current.src = `http://localhost:5000${data[currentSongIndex].audio}`;\n      }\n    }).catch(error => console.error(\"Error fetching songs:\", error));\n  }, [currentSongIndex]);\n  useEffect(() => {\n    const storedIndex = localStorage.getItem(\"currentSongIndex\");\n    if (storedIndex !== null) {\n      setCurrentSongIndex(parseInt(storedIndex));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"currentSongIndex\", String(currentSongIndex));\n  }, [currentSongIndex]);\n\n  // Function to handle playing the current song\n  // Function to handle playing the current song\n  const handlePlay = () => {\n    const playPromise = audioRef.current.play();\n    if (playPromise !== undefined) {\n      playPromise.then(() => {\n        setIsPlaying(true);\n      }).catch(error => {\n        console.error(\"Playback failed:\", error);\n      });\n    }\n  };\n\n  // UseEffect to set up audio event listeners\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.onloadeddata = () => {\n        setAudioLoaded(true);\n      };\n      audioRef.current.onplay = () => {\n        setIsPlaying(true);\n      };\n      audioRef.current.onpause = () => {\n        setIsPlaying(false);\n      };\n      audioRef.current.ontimeupdate = () => {\n        setCurrentTime(audioRef.current.currentTime);\n      };\n      audioRef.current.onended = () => {\n        // Play next song when current song ends\n        handleNext();\n      };\n    }\n  }, [audioRef]);\n\n  // Function to play the next song\n  const handleNext = () => {\n    const newIndex = (currentSongIndex + 1) % songs.length;\n    setCurrentSongIndex(newIndex);\n    setCurrentSongImage(`${songs[newIndex].image}`);\n    audioRef.current.src = `http://localhost:5000${songs[newIndex].audio}`;\n\n    // Event listener for the 'load' event to ensure the new source is fully loaded\n    audioRef.current.addEventListener(\"loadeddata\", () => {\n      audioRef.current.play();\n    });\n\n    // Check if the audio element is already loaded\n    if (audioRef.current.readyState >= 2) {\n      audioRef.current.play();\n    }\n  };\n\n  // Function to play the previous song\n  const handlePrevious = () => {\n    const newIndex = (currentSongIndex - 1 + songs.length) % songs.length;\n    setCurrentSongIndex(newIndex);\n    setCurrentSongImage(`${songs[newIndex].image}`);\n    audioRef.current.src = `http://localhost:5000${songs[newIndex].audio}`;\n\n    // Event listener for the 'load' event to ensure the new source is fully loaded\n    audioRef.current.addEventListener(\"loadeddata\", () => {\n      audioRef.current.play();\n    });\n\n    // Check if the audio element is already loaded\n    if (audioRef.current.readyState >= 2) {\n      audioRef.current.play();\n    }\n  };\n\n  // Function to handle play/pause toggle\n  // Function to handle play/pause toggle\n  const playPauseToggle = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(false); // Update isPlaying state to false when pausing\n    } else {\n      handlePlay();\n      setIsPlaying(true); // Update isPlaying state to true when playing\n    }\n  };\n\n  // Function to handle volume change\n  const handleVolumeChange = e => {\n    console.log(\"Audio reference:\", audioRef.current);\n    const newVolume = parseFloat(e.target.value);\n    if (!isNaN(newVolume) && isFinite(newVolume)) {\n      audioRef.current.volume = newVolume;\n    }\n  };\n\n  // Function to handle progress change\n  const handleProgressChange = e => {\n    audioRef.current.currentTime = e.target.value * duration / 100;\n  };\n  const toggleLayerVisibility = () => {\n    setIsLayerVisible(!isLayerVisible);\n  };\n  const toggleSongsListVisibility = () => {\n    setIsSongsListVisible(!isSongsListVisible);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"music-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"layer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"volume-slider\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0.01\",\n            max: \"1\",\n            step: \"0.01\",\n            value: audioRef.current ? audioRef.current.volume : 1,\n            className: \"volumerange\",\n            onChange: handleVolumeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-icons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"volume btn\",\n          onClick: handleVolumeChange,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            id: \"volumeicon\",\n            className: \"fas fa-volume-up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"list btn\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-list\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-img\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentSongImage,\n          alt: \"song-images\",\n          id: \"img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-info\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"title\",\n          children: songs.length > 0 ? songs[currentSongIndex].title : \"No Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        id: \"audio\",\n        ref: audioRef,\n        onLoadedData: () => setAudioLoaded(true),\n        onTimeUpdate: () => setCurrentTime(audioRef.current.currentTime),\n        onDurationChange: () => setDuration(audioRef.current.duration)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"progress-line\",\n            style: {\n              width: `${currentTime / duration * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"100\",\n            value: currentTime / duration * 100,\n            className: \"progress\",\n            onChange: handleProgressChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"duration\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"current-time\",\n            children: formatTime(currentTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"duration-time\",\n            children: formatTime(duration)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"repeat btn\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-redo-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"prevbtn\",\n            onClick: handlePrevious,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-backward\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"playpause\",\n            onClick: playPauseToggle,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              id: \"playpause-btn\",\n              className: `fas ${isPlaying ? \"fa-pause\" : \"fa-play\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nextbtn\",\n            onClick: handleNext,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-forward\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"like btn\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            id: \"likeicon\",\n            className: \"far fa-heart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"songs-list\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"list-close btn\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicPlayer, \"IYMFWwZHvWXIc7JA3lImtZqNeiE=\");\n_c = MusicPlayer;\nconst formatTime = time => {\n  const minutes = Math.floor(time / 60);\n  const seconds = Math.floor(time % 60);\n  return `${String(minutes).padStart(2, \"0\")}:${String(seconds).padStart(2, \"0\")}`;\n};\nexport default MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","MusicPlayer","_s","isPlaying","setIsPlaying","currentTime","setCurrentTime","duration","setDuration","currentSongImage","setCurrentSongImage","songs","setSongs","currentSongIndex","setCurrentSongIndex","audioRef","audioLoaded","setAudioLoaded","isLayerVisible","setIsLayerVisible","isSongsListVisible","setIsSongsListVisible","fetch","then","response","ok","Error","json","data","length","image","current","src","audio","catch","error","console","storedIndex","localStorage","getItem","parseInt","setItem","String","handlePlay","playPromise","play","undefined","onloadeddata","onplay","onpause","ontimeupdate","onended","handleNext","newIndex","addEventListener","readyState","handlePrevious","playPauseToggle","pause","handleVolumeChange","e","log","newVolume","parseFloat","target","value","isNaN","isFinite","volume","handleProgressChange","toggleLayerVisibility","toggleSongsListVisibility","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","step","onChange","onClick","id","alt","title","ref","onLoadedData","onTimeUpdate","onDurationChange","style","width","formatTime","_c","time","minutes","Math","floor","seconds","padStart","$RefreshReg$"],"sources":["C:/Users/Girija Sh. Mohanta/Desktop/music/gsmusic/src/Musicplayer.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./Musicplayer.css\";\r\n\r\nconst MusicPlayer = () => {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const [currentSongImage, setCurrentSongImage] = useState(\"\");\r\n  const [songs, setSongs] = useState([]);\r\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\r\n  const audioRef = useRef(null);\r\n  const [audioLoaded, setAudioLoaded] = useState(false);\r\n  const [isLayerVisible, setIsLayerVisible] = useState(false);\r\n  const [isSongsListVisible, setIsSongsListVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/api/songs/\")\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch songs\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setSongs(data);\r\n        if (data.length > 0) {\r\n          setCurrentSongImage(`${data[currentSongIndex].image}`);\r\n          audioRef.current.src = `http://localhost:5000${data[currentSongIndex].audio}`;\r\n        }\r\n      })\r\n      .catch((error) => console.error(\"Error fetching songs:\", error));\r\n  }, [currentSongIndex]);\r\n\r\n  useEffect(() => {\r\n    const storedIndex = localStorage.getItem(\"currentSongIndex\");\r\n    if (storedIndex !== null) {\r\n      setCurrentSongIndex(parseInt(storedIndex));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"currentSongIndex\", String(currentSongIndex));\r\n  }, [currentSongIndex]);\r\n\r\n  // Function to handle playing the current song\r\n  // Function to handle playing the current song\r\n  const handlePlay = () => {\r\n    const playPromise = audioRef.current.play();\r\n    if (playPromise !== undefined) {\r\n      playPromise\r\n        .then(() => {\r\n          setIsPlaying(true);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Playback failed:\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  // UseEffect to set up audio event listeners\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      audioRef.current.onloadeddata = () => {\r\n        setAudioLoaded(true);\r\n      };\r\n      audioRef.current.onplay = () => {\r\n        setIsPlaying(true);\r\n      };\r\n      audioRef.current.onpause = () => {\r\n        setIsPlaying(false);\r\n      };\r\n      audioRef.current.ontimeupdate = () => {\r\n        setCurrentTime(audioRef.current.currentTime);\r\n      };\r\n      audioRef.current.onended = () => {\r\n        // Play next song when current song ends\r\n        handleNext();\r\n      };\r\n    }\r\n  }, [audioRef]);\r\n\r\n  // Function to play the next song\r\n  const handleNext = () => {\r\n    const newIndex = (currentSongIndex + 1) % songs.length;\r\n    setCurrentSongIndex(newIndex);\r\n    setCurrentSongImage(`${songs[newIndex].image}`);\r\n    audioRef.current.src = `http://localhost:5000${songs[newIndex].audio}`;\r\n\r\n    // Event listener for the 'load' event to ensure the new source is fully loaded\r\n    audioRef.current.addEventListener(\"loadeddata\", () => {\r\n      audioRef.current.play();\r\n    });\r\n\r\n    // Check if the audio element is already loaded\r\n    if (audioRef.current.readyState >= 2) {\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  // Function to play the previous song\r\n  const handlePrevious = () => {\r\n    const newIndex = (currentSongIndex - 1 + songs.length) % songs.length;\r\n    setCurrentSongIndex(newIndex);\r\n    setCurrentSongImage(`${songs[newIndex].image}`);\r\n    audioRef.current.src = `http://localhost:5000${songs[newIndex].audio}`;\r\n\r\n    // Event listener for the 'load' event to ensure the new source is fully loaded\r\n    audioRef.current.addEventListener(\"loadeddata\", () => {\r\n      audioRef.current.play();\r\n    });\r\n\r\n    // Check if the audio element is already loaded\r\n    if (audioRef.current.readyState >= 2) {\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  // Function to handle play/pause toggle\r\n  // Function to handle play/pause toggle\r\n  const playPauseToggle = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(false); // Update isPlaying state to false when pausing\r\n    } else {\r\n      handlePlay();\r\n      setIsPlaying(true); // Update isPlaying state to true when playing\r\n    }\r\n  };\r\n\r\n  // Function to handle volume change\r\n  const handleVolumeChange = (e) => {\r\n    console.log(\"Audio reference:\", audioRef.current);\r\n    const newVolume = parseFloat(e.target.value);\r\n    if (!isNaN(newVolume) && isFinite(newVolume)) {\r\n      audioRef.current.volume = newVolume;\r\n    }\r\n  };\r\n\r\n  // Function to handle progress change\r\n  const handleProgressChange = (e) => {\r\n    audioRef.current.currentTime = (e.target.value * duration) / 100;\r\n  };\r\n const toggleLayerVisibility = () => {\r\n    setIsLayerVisible(!isLayerVisible);\r\n  };\r\n\r\n  const toggleSongsListVisibility = () => {\r\n    setIsSongsListVisible(!isSongsListVisible);\r\n  };\r\n  return (\r\n    <div className=\"music-container\">\r\n      <div className=\"music-body\">\r\n        <div className=\"layer\">\r\n          <div className=\"volume-slider\">\r\n            <span className=\"bar\"></span>\r\n            <input\r\n              type=\"range\"\r\n              min=\"0.01\"\r\n              max=\"1\"\r\n              step=\"0.01\"\r\n              value={audioRef.current ? audioRef.current.volume : 1}\r\n              className=\"volumerange\"\r\n              onChange={handleVolumeChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"top-icons\">\r\n          <button className=\"volume btn\" onClick={handleVolumeChange}>\r\n            <i id=\"volumeicon\" className=\"fas fa-volume-up\"></i>\r\n          </button>\r\n          <button className=\"list btn\">\r\n            <i className=\"fas fa-list\"></i>\r\n          </button>\r\n        </div>\r\n        <div className=\"music-img\">\r\n          <img src={currentSongImage} alt=\"song-images\" id=\"img\" />\r\n        </div>\r\n        <div className=\"music-info\">\r\n          <h2 id=\"title\">\r\n            {songs.length > 0 ? songs[currentSongIndex].title : \"No Title\"}\r\n          </h2>\r\n        </div>\r\n\r\n        <audio\r\n          id=\"audio\"\r\n          ref={audioRef}\r\n          onLoadedData={() => setAudioLoaded(true)}\r\n          onTimeUpdate={() => setCurrentTime(audioRef.current.currentTime)}\r\n          onDurationChange={() => setDuration(audioRef.current.duration)}\r\n        ></audio>\r\n        <div className=\"music-progress\">\r\n          <div className=\"progress-bar\">\r\n            <span\r\n              className=\"progress-line\"\r\n              style={{ width: `${(currentTime / duration) * 100}%` }}\r\n            ></span>\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              value={(currentTime / duration) * 100}\r\n              className=\"progress\"\r\n              onChange={handleProgressChange}\r\n            />\r\n          </div>\r\n          <div className=\"duration\">\r\n            <span className=\"current-time\">{formatTime(currentTime)}</span>\r\n            <span className=\"duration-time\">{formatTime(duration)}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"music-controls\">\r\n          <button className=\"repeat btn\">\r\n            <i className=\"fas fa-redo-alt\"></i>\r\n          </button>\r\n          <div className=\"main-controls\">\r\n            <button className=\"prevbtn\" onClick={handlePrevious}>\r\n              <i className=\"fas fa-backward\"></i>\r\n            </button>\r\n            <button className=\"playpause\" onClick={playPauseToggle}>\r\n              <i\r\n                id=\"playpause-btn\"\r\n                className={`fas ${isPlaying ? \"fa-pause\" : \"fa-play\"}`}\r\n              ></i>\r\n            </button>\r\n            <button className=\"nextbtn\" onClick={handleNext}>\r\n              <i className=\"fas fa-forward\"></i>\r\n            </button>\r\n          </div>\r\n          <button className=\"like btn\">\r\n            <i id=\"likeicon\" className=\"far fa-heart\"></i>\r\n          </button>\r\n        </div>\r\n        <div className=\"songs-list\">\r\n          <button className=\"list-close btn\">\r\n            <i className=\"fas fa-times\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formatTime = (time) => {\r\n  const minutes = Math.floor(time / 60);\r\n  const seconds = Math.floor(time % 60);\r\n  return `${String(minutes).padStart(2, \"0\")}:${String(seconds).padStart(\r\n    2,\r\n    \"0\"\r\n  )}`;\r\n};\r\n\r\nexport default MusicPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}