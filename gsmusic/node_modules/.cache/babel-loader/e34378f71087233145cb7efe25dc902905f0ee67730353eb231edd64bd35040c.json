{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Girija Sh. Mohanta\\\\Desktop\\\\music\\\\gsmusic\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Musicplayer from './Musicplayer.js';\nimport Loader from './Loader.js'; // Import your Loader component\nimport audioClip from './loader.mp3'; // Import your audio clip\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Play the audio clip once when the component mounts\n    const audio = new Audio(audioClip);\n    const playPromise = audio.play();\n\n    // If the audio starts playing successfully, set a timeout to stop the loader\n    playPromise.then(() => {\n      setTimeout(() => {\n        setIsLoading(false);\n        audio.pause(); // Pause the audio when loading is complete\n      }, 5000); // Stop loader after 5 seconds\n    }).catch(error => {\n      console.error('Failed to play audio:', error);\n      setIsLoading(false); // If audio fails to play, stop loader immediately\n    });\n\n    // Clean up audio and loader on component unmount\n    return () => {\n      clearTimeout();\n      audio.pause();\n    };\n  }, []);\n\n  // Show the loader component while isLoading is true\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Musicplayer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true);\n  }\n\n  // Show only the music player app when isLoading becomes false\n  return /*#__PURE__*/_jsxDEV(Musicplayer, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"Yt82d/dvZsn5nYh5sqDQjv+rJ38=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Musicplayer","Loader","audioClip","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoading","setIsLoading","audio","Audio","playPromise","play","then","setTimeout","pause","catch","error","console","clearTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Girija Sh. Mohanta/Desktop/music/gsmusic/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Musicplayer from './Musicplayer.js';\nimport Loader from './Loader.js'; // Import your Loader component\nimport audioClip from './loader.mp3'; // Import your audio clip\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Play the audio clip once when the component mounts\n    const audio = new Audio(audioClip);\n    const playPromise = audio.play();\n\n    // If the audio starts playing successfully, set a timeout to stop the loader\n    playPromise.then(() => {\n      setTimeout(() => {\n        setIsLoading(false);\n        audio.pause(); // Pause the audio when loading is complete\n      }, 5000); // Stop loader after 5 seconds\n    }).catch(error => {\n      console.error('Failed to play audio:', error);\n      setIsLoading(false); // If audio fails to play, stop loader immediately\n    });\n\n    // Clean up audio and loader on component unmount\n    return () => {\n      clearTimeout();\n      audio.pause();\n    };\n  }, []);\n\n  // Show the loader component while isLoading is true\n  if (isLoading) {\n    return (\n      <>\n        <Loader />\n        <Musicplayer /> {/* You can include the music player component here if you want it to be rendered along with the loader */}\n      </>\n    );\n  }\n\n  // Show only the music player app when isLoading becomes false\n  return <Musicplayer />;\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,MAAM,MAAM,aAAa,CAAC,CAAC;AAClC,OAAOC,SAAS,MAAM,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,KAAK,GAAG,IAAIC,KAAK,CAACV,SAAS,CAAC;IAClC,MAAMW,WAAW,GAAGF,KAAK,CAACG,IAAI,CAAC,CAAC;;IAEhC;IACAD,WAAW,CAACE,IAAI,CAAC,MAAM;MACrBC,UAAU,CAAC,MAAM;QACfN,YAAY,CAAC,KAAK,CAAC;QACnBC,KAAK,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC;MACjB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAI;MAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CT,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXW,YAAY,CAAC,CAAC;MACdV,KAAK,CAACM,KAAK,CAAC,CAAC;IACf,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAIR,SAAS,EAAE;IACb,oBACEL,OAAA,CAAAE,SAAA;MAAAgB,QAAA,gBACElB,OAAA,CAACH,MAAM;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVtB,OAAA,CAACJ,WAAW;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC;IAAA,eAChB,CAAC;EAEP;;EAEA;EACA,oBAAOtB,OAAA,CAACJ,WAAW;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxB;AAAClB,EAAA,CAtCQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}