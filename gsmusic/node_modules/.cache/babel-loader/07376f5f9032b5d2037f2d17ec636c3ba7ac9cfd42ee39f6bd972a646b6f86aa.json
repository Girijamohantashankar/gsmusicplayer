{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\gsmusic\\\\src\\\\Musicplayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"./Musicplayer.css\";\nimport playIcon from './play.png';\nimport pauseIcon from './pause.png';\nimport nextIcon from './next.png';\nimport previousIcon from './previous.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Musicplayer() {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('All');\n  const [currentSong, setCurrentSong] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/songs').then(response => response.json()).then(data => setSongs(data)).catch(error => console.error('Error fetching songs:', error));\n  }, []);\n  useEffect(() => {\n    const lastSongId = localStorage.getItem('lastSongId');\n    if (lastSongId) {\n      const lastSong = songs.find(song => song.id === parseInt(lastSongId));\n      if (lastSong) {\n        setCurrentSong(lastSong);\n      }\n    }\n  }, [songs]);\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleCategoryChange = event => {\n    setSelectedCategory(event.target.value);\n  };\n  const handleSongClick = song => {\n    setCurrentSong(song);\n    setIsPlaying(true);\n    localStorage.setItem('lastSongId', song.id);\n  };\n  const handlePlayPauseClick = () => {\n    setIsPlaying(prevState => !prevState);\n  };\n  const handleNextClick = () => {\n    const currentIndex = songs.findIndex(song => song.id === currentSong.id);\n    const nextIndex = (currentIndex + 1) % songs.length;\n    setCurrentSong(songs[nextIndex]);\n    setIsPlaying(true);\n    localStorage.setItem('lastSongId', songs[nextIndex].id);\n  };\n  const handlePreviousClick = () => {\n    const currentIndex = songs.findIndex(song => song.id === currentSong.id);\n    const previousIndex = (currentIndex - 1 + songs.length) % songs.length;\n    setCurrentSong(songs[previousIndex]);\n    setIsPlaying(true);\n    localStorage.setItem('lastSongId', songs[previousIndex].id);\n  };\n  const filteredSongs = songs.filter(song => (song.title.toLowerCase().includes(searchTerm.toLowerCase()) || song.artist.toLowerCase().includes(searchTerm.toLowerCase())) && (selectedCategory === 'All' || song.categories.includes(selectedCategory)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"GS Music Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for a song...\",\n        value: searchTerm,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory,\n        onChange: handleCategoryChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"All\",\n          children: \"All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"English\",\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Hindi\",\n          children: \"Hindi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Punjabi\",\n          children: \"Punjabi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Odia\",\n          children: \"Odia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cd-container\",\n      children: currentSong && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `cd ${isPlaying ? 'playing' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"cd-image\",\n          src: currentSong.image,\n          alt: \"Album Cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"control-button\",\n            src: previousIcon,\n            alt: \"Previous\",\n            onClick: handlePreviousClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"control-button\",\n            src: isPlaying ? pauseIcon : playIcon,\n            alt: isPlaying ? \"Pause\" : \"Play\",\n            onClick: handlePlayPauseClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"control-button\",\n            src: nextIcon,\n            alt: \"Next\",\n            onClick: handleNextClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"song-list\",\n      children: filteredSongs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSongClick(song),\n        children: [song.title, \" - \", song.artist]\n      }, song.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), currentSong && /*#__PURE__*/_jsxDEV(\"audio\", {\n      className: \"audio-player\",\n      controls: true,\n      autoPlay: isPlaying,\n      src: currentSong.audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(Musicplayer, \"NbiN6V7+jchdlBa1BNkafZ6WVlk=\");\n_c = Musicplayer;\nexport default Musicplayer;\nvar _c;\n$RefreshReg$(_c, \"Musicplayer\");","map":{"version":3,"names":["React","useState","useEffect","playIcon","pauseIcon","nextIcon","previousIcon","jsxDEV","_jsxDEV","Musicplayer","_s","songs","setSongs","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","currentSong","setCurrentSong","isPlaying","setIsPlaying","fetch","then","response","json","data","catch","error","console","lastSongId","localStorage","getItem","lastSong","find","song","id","parseInt","handleSearch","event","target","value","handleCategoryChange","handleSongClick","setItem","handlePlayPauseClick","prevState","handleNextClick","currentIndex","findIndex","nextIndex","length","handlePreviousClick","previousIndex","filteredSongs","filter","title","toLowerCase","includes","artist","categories","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","src","image","alt","onClick","map","controls","autoPlay","audio","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/gsmusic/src/Musicplayer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"./Musicplayer.css\";\r\nimport playIcon from './play.png';\r\nimport pauseIcon from './pause.png';\r\nimport nextIcon from './next.png';\r\nimport previousIcon from './previous.png';\r\n\r\nfunction Musicplayer() {\r\n    const [songs, setSongs] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedCategory, setSelectedCategory] = useState('All');\r\n    const [currentSong, setCurrentSong] = useState(null);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/api/songs')\r\n            .then(response => response.json())\r\n            .then(data => setSongs(data))\r\n            .catch(error => console.error('Error fetching songs:', error));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const lastSongId = localStorage.getItem('lastSongId');\r\n        if (lastSongId) {\r\n            const lastSong = songs.find(song => song.id === parseInt(lastSongId));\r\n            if (lastSong) {\r\n                setCurrentSong(lastSong);\r\n            }\r\n        }\r\n    }, [songs]);\r\n\r\n    const handleSearch = (event) => {\r\n        setSearchTerm(event.target.value);\r\n    };\r\n\r\n    const handleCategoryChange = (event) => {\r\n        setSelectedCategory(event.target.value);\r\n    };\r\n\r\n    const handleSongClick = (song) => {\r\n        setCurrentSong(song);\r\n        setIsPlaying(true);\r\n        localStorage.setItem('lastSongId', song.id);\r\n    };\r\n\r\n    const handlePlayPauseClick = () => {\r\n        setIsPlaying(prevState => !prevState);\r\n    };\r\n\r\n    const handleNextClick = () => {\r\n        const currentIndex = songs.findIndex(song => song.id === currentSong.id);\r\n        const nextIndex = (currentIndex + 1) % songs.length;\r\n        setCurrentSong(songs[nextIndex]);\r\n        setIsPlaying(true);\r\n        localStorage.setItem('lastSongId', songs[nextIndex].id);\r\n    };\r\n\r\n    const handlePreviousClick = () => {\r\n        const currentIndex = songs.findIndex(song => song.id === currentSong.id);\r\n        const previousIndex = (currentIndex - 1 + songs.length) % songs.length;\r\n        setCurrentSong(songs[previousIndex]);\r\n        setIsPlaying(true);\r\n        localStorage.setItem('lastSongId', songs[previousIndex].id);\r\n    };\r\n\r\n    const filteredSongs = songs.filter(song =>\r\n        (song.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        song.artist.toLowerCase().includes(searchTerm.toLowerCase())) &&\r\n        (selectedCategory === 'All' || song.categories.includes(selectedCategory))\r\n    );\r\n\r\n    return (\r\n        <div className=\"music-player\">\r\n            <h1 className=\"title\">GS Music Player</h1>\r\n            <div className=\"controls\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search for a song...\"\r\n                    value={searchTerm}\r\n                    onChange={handleSearch}\r\n                />\r\n                <select value={selectedCategory} onChange={handleCategoryChange}>\r\n                    <option value=\"All\">All Categories</option>\r\n                    <option value=\"English\">English</option>\r\n                    <option value=\"Hindi\">Hindi</option>\r\n                    <option value=\"Punjabi\">Punjabi</option>\r\n                    <option value=\"Odia\">Odia</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"cd-container\">\r\n                {currentSong && (\r\n                    <div className={`cd ${isPlaying ? 'playing' : ''}`}>\r\n                        <img className=\"cd-image\" src={currentSong.image} alt=\"Album Cover\" />\r\n                        <div className=\"controls\">\r\n                            <img\r\n                                className=\"control-button\"\r\n                                src={previousIcon}\r\n                                alt=\"Previous\"\r\n                                onClick={handlePreviousClick}\r\n                            />\r\n                            <img\r\n                                className=\"control-button\"\r\n                                src={isPlaying ? pauseIcon : playIcon}\r\n                                alt={isPlaying ? \"Pause\" : \"Play\"}\r\n                                onClick={handlePlayPauseClick}\r\n                            />\r\n                            <img\r\n                                className=\"control-button\"\r\n                                src={nextIcon}\r\n                                alt=\"Next\"\r\n                                onClick={handleNextClick}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <ul className=\"song-list\">\r\n                {filteredSongs.map(song => (\r\n                    <li key={song.id} onClick={() => handleSongClick(song)}>\r\n                        {song.title} - {song.artist}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            {currentSong && (\r\n                <audio\r\n                    className=\"audio-player\"\r\n                    controls\r\n                    autoPlay={isPlaying}\r\n                    src={currentSong.audio}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Musicplayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}