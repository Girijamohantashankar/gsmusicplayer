{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Girija Sh. Mohanta\\\\Desktop\\\\music\\\\gsmusic\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Musicplayer from \"./Musicplayer.js\";\nimport Loader from \"./Loader.js\";\nimport audioClip from \"./loader.mp3\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const audio = new Audio(audioClip);\n    let audioPlayed = false;\n    const playAudio = () => {\n      if (audio && audio.paused) {\n        audio.play();\n        audioPlayed = true;\n      }\n    };\n    const handleInteraction = () => {\n      if (!audioPlayed) {\n        playAudio();\n        setIsLoading(false);\n      }\n    };\n    document.addEventListener(\"click\", handleInteraction);\n    document.addEventListener(\"keydown\", handleInteraction);\n    return () => {\n      document.removeEventListener(\"click\", handleInteraction);\n      document.removeEventListener(\"keydown\", handleInteraction);\n      audio.pause();\n    };\n  }, []);\n  useEffect(() => {\n    // Hide the loader after 10 seconds\n    const hideLoaderTimeout = setTimeout(() => {\n      setIsLoading(false);\n    }, 10000);\n    return () => {\n      clearTimeout(hideLoaderTimeout);\n    };\n  }, []); // No dependency array, it should only run once when component mounts\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-container\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Musicplayer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"QmMObrvwCqfhPfVpIPABr9yxZgQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Musicplayer","Loader","audioClip","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoading","setIsLoading","audio","Audio","audioPlayed","playAudio","paused","play","handleInteraction","document","addEventListener","removeEventListener","pause","hideLoaderTimeout","setTimeout","clearTimeout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Girija Sh. Mohanta/Desktop/music/gsmusic/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Musicplayer from \"./Musicplayer.js\";\nimport Loader from \"./Loader.js\"; \nimport audioClip from \"./loader.mp3\"; \n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const audio = new Audio(audioClip);\n    let audioPlayed = false;\n    const playAudio = () => {\n      if (audio && audio.paused) {\n        audio.play();\n        audioPlayed = true;\n      }\n    };\n\n    const handleInteraction = () => {\n      if (!audioPlayed) {\n        playAudio();\n        setIsLoading(false);\n      }\n    };\n\n    document.addEventListener(\"click\", handleInteraction);\n    document.addEventListener(\"keydown\", handleInteraction);\n\n    return () => {\n      document.removeEventListener(\"click\", handleInteraction);\n      document.removeEventListener(\"keydown\", handleInteraction);\n      audio.pause();\n    };\n  }, []);\n\n  useEffect(() => {\n    // Hide the loader after 10 seconds\n    const hideLoaderTimeout = setTimeout(() => {\n      setIsLoading(false);\n    }, 10000);\n\n    return () => {\n      clearTimeout(hideLoaderTimeout);\n    };\n  }, []); // No dependency array, it should only run once when component mounts\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"loader-container\">\n          <Loader />\n        </div>\n      ) : (\n        <Musicplayer />\n      )}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,SAAS,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAG,IAAIC,KAAK,CAACV,SAAS,CAAC;IAClC,IAAIW,WAAW,GAAG,KAAK;IACvB,MAAMC,SAAS,GAAGA,CAAA,KAAM;MACtB,IAAIH,KAAK,IAAIA,KAAK,CAACI,MAAM,EAAE;QACzBJ,KAAK,CAACK,IAAI,CAAC,CAAC;QACZH,WAAW,GAAG,IAAI;MACpB;IACF,CAAC;IAED,MAAMI,iBAAiB,GAAGA,CAAA,KAAM;MAC9B,IAAI,CAACJ,WAAW,EAAE;QAChBC,SAAS,CAAC,CAAC;QACXJ,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDQ,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEF,iBAAiB,CAAC;IACrDC,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEF,iBAAiB,CAAC;IAEvD,OAAO,MAAM;MACXC,QAAQ,CAACE,mBAAmB,CAAC,OAAO,EAAEH,iBAAiB,CAAC;MACxDC,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAEH,iBAAiB,CAAC;MAC1DN,KAAK,CAACU,KAAK,CAAC,CAAC;IACf,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENtB,SAAS,CAAC,MAAM;IACd;IACA,MAAMuB,iBAAiB,GAAGC,UAAU,CAAC,MAAM;MACzCb,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,KAAK,CAAC;IAET,OAAO,MAAM;MACXc,YAAY,CAACF,iBAAiB,CAAC;IACjC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACElB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,EACGhB,SAAS,gBACRL,OAAA;MAAKsB,SAAS,EAAC,kBAAkB;MAAAD,QAAA,eAC/BrB,OAAA,CAACH,MAAM;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,gBAEN1B,OAAA,CAACJ,WAAW;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACf,gBACD,CAAC;AAEP;AAACtB,EAAA,CApDQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAsDZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}