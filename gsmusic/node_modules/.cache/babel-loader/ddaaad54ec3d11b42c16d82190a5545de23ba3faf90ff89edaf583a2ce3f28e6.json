{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Girija Sh. Mohanta\\\\Desktop\\\\GSMusic App\\\\gsmusic\\\\src\\\\Musicplayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"./Musicplayer.css\";\nimport { FaPlay, FaPause, FaStepForward, FaStepBackward } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Musicplayer() {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('All');\n  const [currentSong, setCurrentSong] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [audioRef, setAudioRef] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/songs/').then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch songs');\n      }\n      return response.json();\n    }).then(data => {\n      console.log(\"Fetched songs:\", data); // Log fetched songs to console\n      setSongs(data);\n    }).catch(error => console.error('Error fetching songs:', error));\n  }, []);\n  useEffect(() => {\n    const lastSongId = localStorage.getItem('lastSongId');\n    if (lastSongId) {\n      const lastSong = songs.find(song => song.id === parseInt(lastSongId));\n      if (lastSong) {\n        setCurrentSong(lastSong);\n      }\n    }\n  }, [songs]);\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleCategoryChange = event => {\n    setSelectedCategory(event.target.value);\n  };\n  const handleSongClick = song => {\n    setCurrentSong(song);\n    setIsPlaying(true);\n    localStorage.setItem('lastSongId', song.id);\n  };\n  const handlePlayPauseClick = () => {\n    setIsPlaying(prevState => !prevState);\n    if (audioRef) {\n      if (isPlaying) {\n        audioRef.pause();\n      } else {\n        audioRef.play();\n      }\n    }\n  };\n  const handleNextClick = () => {\n    const currentIndex = songs.findIndex(song => song.id === currentSong.id);\n    const nextIndex = (currentIndex + 1) % songs.length;\n    setCurrentSong(songs[nextIndex]);\n    setIsPlaying(true);\n    localStorage.setItem('lastSongId', songs[nextIndex].id);\n  };\n  const handlePreviousClick = () => {\n    const currentIndex = songs.findIndex(song => song.id === currentSong.id);\n    const previousIndex = (currentIndex - 1 + songs.length) % songs.length;\n    setCurrentSong(songs[previousIndex]);\n    setIsPlaying(true);\n    localStorage.setItem('lastSongId', songs[previousIndex].id);\n  };\n  const handleTimeUpdate = () => {\n    // Update your progress bar logic here based on audioRef.currentTime and audioRef.duration\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"GS Music Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for a song...\",\n        value: searchTerm,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory,\n        onChange: handleCategoryChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"All\",\n          children: \"All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"English\",\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Hindi\",\n          children: \"Hindi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Punjabi\",\n          children: \"Punjabi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Odia\",\n          children: \"Odia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cd-container\",\n      children: currentSong && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `cd ${isPlaying ? 'playing' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"cd-image\",\n          src: currentSong.image,\n          alt: \"Album Cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"song-name\",\n            children: currentSong.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"artist-name\",\n            children: currentSong.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(FaStepBackward, {\n            className: \"control-button\",\n            onClick: handlePreviousClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), isPlaying ? /*#__PURE__*/_jsxDEV(FaPause, {\n            className: \"control-button\",\n            onClick: handlePlayPauseClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(FaPlay, {\n            className: \"control-button\",\n            onClick: handlePlayPauseClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FaStepForward, {\n            className: \"control-button\",\n            onClick: handleNextClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"song-list\",\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSongClick(song),\n        children: [song.title, \" - \", song.artist]\n      }, song.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), currentSong && /*#__PURE__*/_jsxDEV(\"audio\", {\n      className: \"audio-player\",\n      ref: audio => {\n        if (!audioRef) {\n          setAudioRef(audio);\n        }\n      },\n      controls: true,\n      autoPlay: isPlaying,\n      src: `http://localhost:5000${currentSong.audio}`,\n      onTimeUpdate: handleTimeUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s(Musicplayer, \"nQdNmb6sfAIEhAzUzCal4wYBS0s=\");\n_c = Musicplayer;\nexport default Musicplayer;\nvar _c;\n$RefreshReg$(_c, \"Musicplayer\");","map":{"version":3,"names":["React","useState","useEffect","FaPlay","FaPause","FaStepForward","FaStepBackward","jsxDEV","_jsxDEV","Musicplayer","_s","songs","setSongs","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","currentSong","setCurrentSong","isPlaying","setIsPlaying","audioRef","setAudioRef","fetch","then","response","ok","Error","json","data","console","log","catch","error","lastSongId","localStorage","getItem","lastSong","find","song","id","parseInt","handleSearch","event","target","value","handleCategoryChange","handleSongClick","setItem","handlePlayPauseClick","prevState","pause","play","handleNextClick","currentIndex","findIndex","nextIndex","length","handlePreviousClick","previousIndex","handleTimeUpdate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","src","image","alt","title","artist","onClick","map","ref","audio","controls","autoPlay","onTimeUpdate","_c","$RefreshReg$"],"sources":["C:/Users/Girija Sh. Mohanta/Desktop/GSMusic App/gsmusic/src/Musicplayer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"./Musicplayer.css\";\r\nimport { FaPlay, FaPause, FaStepForward, FaStepBackward } from 'react-icons/fa';\r\n\r\nfunction Musicplayer() {\r\n    const [songs, setSongs] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedCategory, setSelectedCategory] = useState('All');\r\n    const [currentSong, setCurrentSong] = useState(null);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [audioRef, setAudioRef] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/api/songs/')\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch songs');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                console.log(\"Fetched songs:\", data); // Log fetched songs to console\r\n                setSongs(data);\r\n            })\r\n            .catch(error => console.error('Error fetching songs:', error));\r\n    }, []);\r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        const lastSongId = localStorage.getItem('lastSongId');\r\n        if (lastSongId) {\r\n            const lastSong = songs.find(song => song.id === parseInt(lastSongId));\r\n            if (lastSong) {\r\n                setCurrentSong(lastSong);\r\n            }\r\n        }\r\n    }, [songs]);\r\n\r\n    const handleSearch = (event) => {\r\n        setSearchTerm(event.target.value);\r\n    };\r\n\r\n    const handleCategoryChange = (event) => {\r\n        setSelectedCategory(event.target.value);\r\n    };\r\n\r\n    const handleSongClick = (song) => {\r\n        setCurrentSong(song);\r\n        setIsPlaying(true);\r\n        localStorage.setItem('lastSongId', song.id);\r\n    };\r\n\r\n    const handlePlayPauseClick = () => {\r\n        setIsPlaying(prevState => !prevState);\r\n        if (audioRef) {\r\n            if (isPlaying) {\r\n                audioRef.pause();\r\n            } else {\r\n                audioRef.play();\r\n            }\r\n        }\r\n    };\r\n    \r\n\r\n    const handleNextClick = () => {\r\n        const currentIndex = songs.findIndex(song => song.id === currentSong.id);\r\n        const nextIndex = (currentIndex + 1) % songs.length;\r\n        setCurrentSong(songs[nextIndex]);\r\n        setIsPlaying(true);\r\n        localStorage.setItem('lastSongId', songs[nextIndex].id);\r\n    };\r\n\r\n    const handlePreviousClick = () => {\r\n        const currentIndex = songs.findIndex(song => song.id === currentSong.id);\r\n        const previousIndex = (currentIndex - 1 + songs.length) % songs.length;\r\n        setCurrentSong(songs[previousIndex]);\r\n        setIsPlaying(true);\r\n        localStorage.setItem('lastSongId', songs[previousIndex].id);\r\n    };\r\n\r\n    const handleTimeUpdate = () => {\r\n        // Update your progress bar logic here based on audioRef.currentTime and audioRef.duration\r\n    };\r\n\r\n    return (\r\n        <div className=\"music-player\">\r\n            <h1 className=\"title\">GS Music Player</h1>\r\n            <div className=\"controls\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search for a song...\"\r\n                    value={searchTerm}\r\n                    onChange={handleSearch}\r\n                />\r\n                <select value={selectedCategory} onChange={handleCategoryChange}>\r\n                    <option value=\"All\">All Categories</option>\r\n                    <option value=\"English\">English</option>\r\n                    <option value=\"Hindi\">Hindi</option>\r\n                    <option value=\"Punjabi\">Punjabi</option>\r\n                    <option value=\"Odia\">Odia</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"cd-container\">\r\n                {currentSong && (\r\n                    <div className={`cd ${isPlaying ? 'playing' : ''}`}>\r\n                        <img className=\"cd-image\" src={currentSong.image} alt=\"Album Cover\" />\r\n                        <div className=\"song-info\">\r\n                            <p className=\"song-name\">{currentSong.title}</p>\r\n                            <p className=\"artist-name\">{currentSong.artist}</p>\r\n                        </div>\r\n                        <div className=\"controls\">\r\n                            <FaStepBackward className=\"control-button\" onClick={handlePreviousClick} />\r\n                            {isPlaying ? (\r\n                                <FaPause className=\"control-button\" onClick={handlePlayPauseClick} />\r\n                            ) : (\r\n                                <FaPlay className=\"control-button\" onClick={handlePlayPauseClick} />\r\n                            )}\r\n                            <FaStepForward className=\"control-button\" onClick={handleNextClick} />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <ul className=\"song-list\">\r\n                {songs.map(song => (\r\n                    <li key={song.id} onClick={() => handleSongClick(song)}>\r\n                        {song.title} - {song.artist}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            {currentSong && (\r\n              <audio\r\n              className=\"audio-player\"\r\n              ref={audio => {\r\n                  if (!audioRef) {\r\n                      setAudioRef(audio);\r\n                  }\r\n              }}\r\n              controls\r\n              autoPlay={isPlaying}\r\n              src={`http://localhost:5000${currentSong.audio}`}\r\n              onTimeUpdate={handleTimeUpdate}\r\n          />\r\n          \r\n            \r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Musicplayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}