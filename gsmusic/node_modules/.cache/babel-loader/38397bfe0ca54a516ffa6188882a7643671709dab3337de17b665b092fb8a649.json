{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\gsmusic\\\\src\\\\Musicplayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"./Musicplayer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Musicplayer() {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('All');\n  const [currentSong, setCurrentSong] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/songs').then(response => response.json()).then(data => setSongs(data)).catch(error => console.error('Error fetching songs:', error));\n  }, []);\n  useEffect(() => {\n    const lastSongId = localStorage.getItem('lastSongId');\n    if (lastSongId) {\n      const lastSong = songs.find(song => song.id === parseInt(lastSongId));\n      if (lastSong) {\n        setCurrentSong(lastSong);\n      }\n    }\n  }, [songs]);\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleCategoryChange = event => {\n    setSelectedCategory(event.target.value);\n  };\n  const handleSongClick = song => {\n    setCurrentSong(song);\n    localStorage.setItem('lastSongId', song.id);\n  };\n  const filteredSongs = songs.filter(song => (song.title.toLowerCase().includes(searchTerm.toLowerCase()) || song.artist.toLowerCase().includes(searchTerm.toLowerCase())) && (selectedCategory === 'All' || song.categories.includes(selectedCategory)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"GS Music Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for a song...\",\n      value: searchTerm,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedCategory,\n      onChange: handleCategoryChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"All\",\n        children: \"All Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"English\",\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Hindi\",\n        children: \"Hindi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Punjabi\",\n        children: \"Punjabi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Odia\",\n        children: \"Odia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredSongs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSongClick(song),\n        children: [song.title, \" - \", song.artist]\n      }, song.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), currentSong && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Now Playing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        autoPlay: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: currentSong.file,\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), \"Your browser does not support the audio element.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(Musicplayer, \"DrbLdvHiXhxi1kAxGoivkLEsC88=\");\n_c = Musicplayer;\nexport default Musicplayer;\nvar _c;\n$RefreshReg$(_c, \"Musicplayer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Musicplayer","_s","songs","setSongs","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","currentSong","setCurrentSong","fetch","then","response","json","data","catch","error","console","lastSongId","localStorage","getItem","lastSong","find","song","id","parseInt","handleSearch","event","target","value","handleCategoryChange","handleSongClick","setItem","filteredSongs","filter","title","toLowerCase","includes","artist","categories","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","onClick","controls","autoPlay","src","file","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/gsmusic/src/Musicplayer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"./Musicplayer.css\";\r\n\r\nfunction Musicplayer() {\r\n    const [songs, setSongs] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedCategory, setSelectedCategory] = useState('All');\r\n    const [currentSong, setCurrentSong] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/api/songs')\r\n            .then(response => response.json())\r\n            .then(data => setSongs(data))\r\n            .catch(error => console.error('Error fetching songs:', error));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const lastSongId = localStorage.getItem('lastSongId');\r\n        if (lastSongId) {\r\n            const lastSong = songs.find(song => song.id === parseInt(lastSongId));\r\n            if (lastSong) {\r\n                setCurrentSong(lastSong);\r\n            }\r\n        }\r\n    }, [songs]);\r\n\r\n    const handleSearch = (event) => {\r\n        setSearchTerm(event.target.value);\r\n    };\r\n\r\n    const handleCategoryChange = (event) => {\r\n        setSelectedCategory(event.target.value);\r\n    };\r\n\r\n    const handleSongClick = (song) => {\r\n        setCurrentSong(song);\r\n        localStorage.setItem('lastSongId', song.id);\r\n    };\r\n\r\n    const filteredSongs = songs.filter(song =>\r\n        (song.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        song.artist.toLowerCase().includes(searchTerm.toLowerCase())) &&\r\n        (selectedCategory === 'All' || song.categories.includes(selectedCategory))\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <h1>GS Music Player</h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Search for a song...\"\r\n                value={searchTerm}\r\n                onChange={handleSearch}\r\n            />\r\n            <select value={selectedCategory} onChange={handleCategoryChange}>\r\n                <option value=\"All\">All Categories</option>\r\n                <option value=\"English\">English</option>\r\n                <option value=\"Hindi\">Hindi</option>\r\n                <option value=\"Punjabi\">Punjabi</option>\r\n                <option value=\"Odia\">Odia</option>\r\n            </select>\r\n            <ul>\r\n                {filteredSongs.map(song => (\r\n                    <li key={song.id} onClick={() => handleSongClick(song)}>\r\n                        {song.title} - {song.artist}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            {currentSong && (\r\n                <div>\r\n                    <h2>Now Playing</h2>\r\n                    <audio controls autoPlay>\r\n                        <source src={currentSong.file} type=\"audio/mpeg\" />\r\n                        Your browser does not support the audio element.\r\n                    </audio>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Musicplayer;\r\n    "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}