{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Girija Sh. Mohanta\\\\Desktop\\\\music\\\\gsmusic\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Musicplayer from './Musicplayer.js';\nimport Loader from './Loader.js'; // Import your Loader component\nimport audioClip from './loader.mp3'; // Import your audio clip\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [audioPlayed, setAudioPlayed] = useState(false); // Track if audio has been played\n\n  useEffect(() => {\n    const audio = new Audio(audioClip);\n\n    // Function to handle audio play\n    const playAudio = () => {\n      audio.play().catch(error => {\n        console.error('Failed to play audio:', error);\n      });\n      setAudioPlayed(true);\n    };\n\n    // Play audio if it hasn't been played before\n    if (!audioPlayed) {\n      playAudio();\n    }\n\n    // Set timeout to stop loader after 5 seconds\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n      audio.pause(); // Pause the audio when loading is complete\n    }, 5000);\n\n    // Clean up timeout and pause audio on component unmount\n    return () => {\n      clearTimeout(timer);\n      audio.pause();\n    };\n  }, [audioPlayed]);\n\n  // Show the loader component until isLoading is false\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Show the music player app when isLoading becomes false\n  return /*#__PURE__*/_jsxDEV(Musicplayer, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"s8bKuToByH7yDB3ri8HyoOpvRvI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Musicplayer","Loader","audioClip","jsxDEV","_jsxDEV","App","_s","isLoading","setIsLoading","audioPlayed","setAudioPlayed","audio","Audio","playAudio","play","catch","error","console","timer","setTimeout","pause","clearTimeout","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Girija Sh. Mohanta/Desktop/music/gsmusic/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Musicplayer from './Musicplayer.js';\nimport Loader from './Loader.js'; // Import your Loader component\nimport audioClip from './loader.mp3'; // Import your audio clip\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [audioPlayed, setAudioPlayed] = useState(false); // Track if audio has been played\n\n  useEffect(() => {\n    const audio = new Audio(audioClip);\n\n    // Function to handle audio play\n    const playAudio = () => {\n      audio.play().catch(error => {\n        console.error('Failed to play audio:', error);\n      });\n      setAudioPlayed(true);\n    };\n\n    // Play audio if it hasn't been played before\n    if (!audioPlayed) {\n      playAudio();\n    }\n\n    // Set timeout to stop loader after 5 seconds\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n      audio.pause(); // Pause the audio when loading is complete\n    }, 5000);\n\n    // Clean up timeout and pause audio on component unmount\n    return () => {\n      clearTimeout(timer);\n      audio.pause();\n    };\n  }, [audioPlayed]);\n\n  // Show the loader component until isLoading is false\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  // Show the music player app when isLoading becomes false\n  return <Musicplayer />;\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,MAAM,MAAM,aAAa,CAAC,CAAC;AAClC,OAAOC,SAAS,MAAM,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEvDC,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAG,IAAIC,KAAK,CAACV,SAAS,CAAC;;IAElC;IACA,MAAMW,SAAS,GAAGA,CAAA,KAAM;MACtBF,KAAK,CAACG,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAI;QAC1BC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;MACFN,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC;;IAED;IACA,IAAI,CAACD,WAAW,EAAE;MAChBI,SAAS,CAAC,CAAC;IACb;;IAEA;IACA,MAAMK,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BX,YAAY,CAAC,KAAK,CAAC;MACnBG,KAAK,CAACS,KAAK,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAM;MACXC,YAAY,CAACH,KAAK,CAAC;MACnBP,KAAK,CAACS,KAAK,CAAC,CAAC;IACf,CAAC;EACH,CAAC,EAAE,CAACX,WAAW,CAAC,CAAC;;EAEjB;EACA,IAAIF,SAAS,EAAE;IACb,oBAAOH,OAAA,CAACH,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnB;;EAEA;EACA,oBAAOrB,OAAA,CAACJ,WAAW;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxB;AAACnB,EAAA,CAxCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}